# .env.example - 请将此文件复制为 .env 并填写您的实际配置值
# .env 文件不应提交到版本控制系统

# --- 应用核心设置 ---
NODE_ENV=development # 可选值: development, production, test
LOG_LEVEL=debug     # 日志级别: error, warn, info, verbose, debug, silly

# --- qBittorrent 设置 ---
QB_URL=https://127.0.0.1:8080 # 你的 qBittorrent WebUI 地址 (注意末尾不要加斜杠)
QB_USERNAME=admin                # qBittorrent 用户名 (如果启用了认证)
QB_PASSWORD=your_qb_password     # qBittorrent 密码 (如果启用了认证)

# --- Rclone 设置 ---
# rclone 配置文件 (rclone.conf) 的绝对路径。
# Windows 示例: C:/Users/YourUser/AppData/Roaming/rclone/rclone.conf
# Linux/macOS 示例: /home/youruser/.config/rclone/rclone.conf
# 如果 rclone.conf 在其默认位置且 rclone 命令能找到它，则此项可以留空。
RCLONE_CONFIG_PATH=

# 你在 rclone.conf 中配置的远程名称 (例如: mydrive, baidudisk)
RCLONE_REMOTE_NAME=your_rclone_remote_name

# 所有通过此脚本上传的文件在网盘上的基础目标路径。
# 例如: BaiduNetDisk/QbitUploads/  或者  CloudBackups/qBit/
# 注意: 推荐末尾添加斜杠 /
RCLONE_DEFAULT_UPLOAD_PATH=BaiduNetDisk/QbitUploads/

# --- 邮件通知设置 (Nodemailer) ---
# 如果不需要邮件通知，可以将以下部分留空或注释掉，并在代码中处理未配置的情况。
MAILER_HOST=smtp.example.com    # SMTP 服务器地址
MAILER_PORT=587                 # SMTP 端口 (通常 587 for TLS, 465 for SSL)
MAILER_SECURE=false             # 如果端口是 465 (SSL) 则为 true, 如果是 587 (STARTTLS) 则为 false
MAILER_USER=your_email_username # SMTP 认证用户名 (通常是你的邮箱地址)
MAILER_PASS=your_email_password # SMTP 认证密码 (或者是应用专用密码)
MAILER_FROM="QB Cloud Sync <no-reply@yourdomain.com>" # 邮件发送者名称和地址
MAILER_TO=recipient1@example.com,recipient2@example.com # 接收通知的邮件地址 (逗号分隔)

# --- 行为策略设置 ---
DELETE_LOCAL_FILES=true       # 上传并验证成功后是否删除本地文件 (true/false)
CLEANUP_EMPTY_DIRS=true       # 删除本地文件后是否清理产生的空目录 (true/false)
DELETE_QB_TASK=true           # 处理完成后是否从 qBittorrent 删除任务 (true/false)

# --- 任务处理器设置 ---
# 轮询 qBittorrent 的时间间隔 (毫秒)
# 示例: 300000 (5 分钟), 60000 (1 分钟)
POLL_INTERVAL_MS=300000

# 最大并发上传/处理任务数
# 设置为 1 表示顺序处理，大于 1 表示并发处理
MAX_CONCURRENT_UPLOADS=2

# --- 智能归档规则 ---
# 你可以选择以下两种方式之一来定义归档规则:
# 1. ARCHIVING_RULES_JSON: 直接在此处填写 JSON 字符串 (适用于简单规则，注意转义)
#    示例 (单行，所有引号需要转义):
#    ARCHIVING_RULES_JSON='[{"if":{"category":"Movies"},"then":{"remotePath":"Video/Movies/{year}/{torrentName}"}},{"if":"default","then":{"remotePath":"Other/{category}/{torrentName}"}}]'
#
# 2. ARCHIVING_RULES_PATH: 指定一个包含归档规则的 JSON 文件的路径 (推荐，更清晰)
#    路径可以是相对路径 (相对于项目根目录) 或绝对路径。
ARCHIVING_RULES_PATH=./archiving-rules.json

# --- 数据库设置 ---
# Prisma 使用此 URL 连接到数据库。对于 SQLite，它是一个文件路径。
DATABASE_URL="file:./prod.db" # 推荐用于生产的数据库文件名
# DATABASE_URL="file:./dev.db"  # 或者用于开发的数据库文件名